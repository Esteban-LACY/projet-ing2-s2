listeLogements.innerHTML = '<tr><td colspan="8" class="text-center">Erreur lors du chargement des données</td></tr>';
                pagination.innerHTML = '';
            });
    }
    
    /**
     * Affiche la liste des logements dans le tableau
     */
    function afficherLogements(logements, total, page, limite, totalPages) {
        if (logements.length === 0) {
            listeLogements.innerHTML = '<tr><td colspan="8" class="text-center">Aucun logement trouvé</td></tr>';
            pagination.innerHTML = '';
            return;
        }
        
        let html = '';
        
        logements.forEach(logement => {
            // Formater le prix
            const prix = formaterPrix(logement.prix);
            
            // Déterminer le type de logement
            let typeLogement = '';
            
            switch (logement.type_logement) {
                case 'entier':
                    typeLogement = 'Logement entier';
                    break;
                case 'collocation':
                    typeLogement = 'Collocation';
                    break;
                case 'libere':
                    typeLogement = 'Libéré';
                    break;
                default:
                    typeLogement = logement.type_logement;
            }
            
            html += `
                <tr>
                    <td>${logement.id}</td>
                    <td>
                        <img src="${logement.photo_principale || '/assets/img/placeholders/logement.jpg'}" alt="${logement.titre}" class="img-thumbnail" width="80">
                    </td>
                    <td>${logement.titre}</td>
                    <td>${logement.ville}</td>
                    <td>${typeLogement}</td>
                    <td>${prix}</td>
                    <td>${logement.proprietaire}</td>
                    <td>
                        <button type="button" class="btn btn-sm btn-primary btn-details" data-id="${logement.id}">
                            <i class="bi bi-eye"></i>
                        </button>
                    </td>
                </tr>
            `;
        });
        
        listeLogements.innerHTML = html;
        
        // Ajouter les événements sur les boutons de détails
        document.querySelectorAll('.btn-details').forEach(button => {
            button.addEventListener('click', function() {
                const id = this.getAttribute('data-id');
                ouvrirModalLogement(id);
            });
        });
        
        // Construire la pagination
        construirePagination(page, totalPages);
        
        // Afficher le nombre total de logements
        const debut = (page - 1) * limite + 1;
        const fin = Math.min(page * limite, total);
        
        document.querySelector('.card-body').insertAdjacentHTML('afterbegin', `
            <p class="text-muted mb-3">Affichage de ${debut} à ${fin} sur ${total} logements</p>
        `);
    }
    
    /**
     * Construit la pagination
     */
    function construirePagination(pageCourante, totalPages) {
        if (totalPages <= 1) {
            pagination.innerHTML = '';
            return;
        }
        
        let html = '';
        
        // Bouton précédent
        html += `
            <li class="page-item ${pageCourante === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" data-page="${pageCourante - 1}" aria-label="Précédent">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        `;
        
        // Pages
        for (let i = 1; i <= totalPages; i++) {
            if (
                i === 1 ||                       // Première page
                i === totalPages ||              // Dernière page
                (i >= pageCourante - 1 && i <= pageCourante + 1)  // 1 page avant et après la courante
            ) {
                html += `
                    <li class="page-item ${i === pageCourante ? 'active' : ''}">
                        <a class="page-link" href="#" data-page="${i}">${i}</a>
                    </li>
                `;
            } else if (
                i === 2 && pageCourante > 3 ||   // Ellipsis après la première page
                i === totalPages - 1 && pageCourante < totalPages - 2  // Ellipsis avant la dernière page
            ) {
                html += '<li class="page-item disabled"><a class="page-link" href="#">&hellip;</a></li>';
            }
        }
        
        // Bouton suivant
        html += `
            <li class="page-item ${pageCourante === totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" data-page="${pageCourante + 1}" aria-label="Suivant">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        `;
        
        pagination.innerHTML = html;
        
        // Ajouter les événements sur les liens de pagination
        document.querySelectorAll('.page-link').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                
                if (this.parentElement.classList.contains('disabled')) {
                    return;
                }
                
                const page = parseInt(this.getAttribute('data-page'));
                
                if (page !== paramsActuels.page) {
                    paramsActuels.page = page;
                    
                    // Mettre à jour l'URL
                    window.history.pushState({}, '', 'logements.php?' + new URLSearchParams(paramsActuels).toString());
                    
                    // Recharger les logements
                    chargerLogements();
                }
            });
        });
    }
    
    /**
     * Ouvre la modal avec les détails d'un logement
     */
    function ouvrirModalLogement(id) {
        // Afficher l'état de chargement
        modalLoading.style.display = 'block';
        modalContent.style.display = 'none';
        
        // Ouvrir la modal
        modalLogement.show();
        
        // Charger les détails du logement
        fetch(`../controllers/admin.php?action=recuperer_logement&id_logement=${id}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    remplirModalLogement(data.data);
                } else {
                    alert('Erreur lors du chargement des données du logement');
                    modalLogement.hide();
                }
            })
            .catch(error => {
                console.error('Erreur lors de la requête:', error);
                alert('Erreur lors du chargement des données du logement');
                modalLogement.hide();
            });
    }
    
    /**
     * Remplit la modal avec les détails d'un logement
     */
    function remplirModalLogement(data) {
        const logement = data.logement;
        const proprietaire = data.proprietaire;
        const photos = data.photos;
        const reservations = data.reservations;
        
        // Titre de la modal
        document.getElementById('modalLogementLabel').textContent = logement.titre;
        
        // Formualaire
        document.getElementById('logement-id').value = logement.id;
        document.getElementById('titre').value = logement.titre;
        document.getElementById('description').value = logement.description;
        document.getElementById('adresse').value = logement.adresse;
        document.getElementById('ville').value = logement.ville;
        document.getElementById('code_postal').value = logement.code_postal;
        document.getElementById('prix').value = logement.prix;
        document.getElementById('type_logement').value = logement.type_logement;
        document.getElementById('nb_places').value = logement.nb_places;
        document.getElementById('latitude').value = logement.latitude;
        document.getElementById('longitude').value = logement.longitude;
        
        // Carousel des photos
        const carouselInner = document.getElementById('carousel-inner');
        carouselInner.innerHTML = '';
        
        if (photos.length === 0) {
            carouselInner.innerHTML = `
                <div class="carousel-item active">
                    <img src="/assets/img/placeholders/logement.jpg" class="d-block w-100" alt="Aucune photo" style="height: 400px; object-fit: cover;">
                </div>
            `;
        } else {
            photos.forEach((photo, index) => {
                carouselInner.innerHTML += `
                    <div class="carousel-item ${index === 0 ? 'active' : ''}">
                        <img src="${photo.url}" class="d-block w-100" alt="${logement.titre}" style="height: 400px; object-fit: cover;">
                    </div>
                `;
            });
        }
        
        // Informations propriétaire
        document.getElementById('proprietaire-name').textContent = `${proprietaire.prenom} ${proprietaire.nom}`;
        document.getElementById('proprietaire-email').textContent = proprietaire.email;
        document.getElementById('proprietaire-phone').textContent = proprietaire.telephone || 'Aucun numéro de téléphone';
        document.getElementById('proprietaire-photo').src = proprietaire.photo_profil || '/assets/img/placeholders/profil.jpg';
        
        // Liste des réservations
        const listeReservations = document.getElementById('liste-reservations');
        
        if (reservations.length === 0) {
            listeReservations.innerHTML = '<tr><td colspan="5" class="text-center">Aucune réservation</td></tr>';
        } else {
            let html = '';
            
            reservations.forEach(reservation => {
                // Formater les dates
                const dateDebut = new Date(reservation.date_debut).toLocaleDateString('fr-FR');
                const dateFin = new Date(reservation.date_fin).toLocaleDateString('fr-FR');
                
                // Formater le prix
                const prix = formaterPrix(reservation.prix_total);
                
                // Déterminer la classe de badge pour le statut
                let badgeClass = '';
                
                switch (reservation.statut) {
                    case 'en_attente':
                        badgeClass = 'bg-warning';
                        break;
                    case 'acceptee':
                        badgeClass = 'bg-success';
                        break;
                    case 'refusee':
                        badgeClass = 'bg-danger';
                        break;
                    case 'annulee':
                        badgeClass = 'bg-secondary';
                        break;
                    case 'terminee':
                        badgeClass = 'bg-primary';
                        break;
                    default:
                        badgeClass = 'bg-dark';
                }
                
                // Formater le statut
                let statut = '';
                
                switch (reservation.statut) {
                    case 'en_attente':
                        statut = 'En attente';
                        break;
                    case 'acceptee':
                        statut = 'Acceptée';
                        break;
                    case 'refusee':
                        statut = 'Refusée';
                        break;
                    case 'annulee':
                        statut = 'Annulée';
                        break;
                    case 'terminee':
                        statut = 'Terminée';
                        break;
                    default:
                        statut = reservation.statut;
                }
                
                html += `
                    <tr>
                        <td>${reservation.id}</td>
                        <td>${reservation.locataire.prenom} ${reservation.locataire.nom}</td>
                        <td>${dateDebut} - ${dateFin}</td>
                        <td>${prix}</td>
                        <td><span class="badge ${badgeClass}">${statut}</span></td>
                    </tr>
                `;
            });
            
            listeReservations.innerHTML = html;
        }
        
        // Masquer le chargement et afficher le contenu
        modalLoading.style.display = 'none';
        modalContent.style.display = 'block';
    }
    
    /**
     * Enregistre les modifications d'un logement
     */
    function enregistrerLogement() {
        // Valider le formulaire
        if (!formLogement.checkValidity()) {
            formLogement.reportValidity();
            return;
        }
        
        // Récupérer les données du formulaire
        const formData = new FormData(formLogement);
        
        // Désactiver le bouton pendant la requête
        btnEnregistrer.disabled = true;
        btnEnregistrer.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Enregistrement...';
        
        // Envoyer la requête
        fetch('../controllers/admin.php?action=modifier_logement', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Logement modifié avec succès');
                    modalLogement.hide();
                    chargerLogements();
                } else {
                    alert(data.message || 'Erreur lors de la modification du logement');
                }
            })
            .catch(error => {
                console.error('Erreur lors de la requête:', error);
                alert('Erreur lors de la modification du logement');
            })
            .finally(() => {
                // Réactiver le bouton
                btnEnregistrer.disabled = false;
                btnEnregistrer.innerHTML = 'Enregistrer';
            });
    }
    
    /**
     * Supprime un logement
     */
    function supprimerLogement() {
        const idLogement = document.getElementById('logement-id').value;
        
        // Désactiver le bouton pendant la requête
        btnSupprimer.disabled = true;
        btnSupprimer.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Suppression...';
        
        // Envoyer la requête
        fetch('../controllers/admin.php?action=supprimer_logement', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: `id_logement=${idLogement}`
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Logement supprimé avec succès');
                    modalLogement.hide();
                    chargerLogements();
                } else {
                    alert(data.message || 'Erreur lors de la suppression du logement');
                }
            })
            .catch(error => {
                console.error('Erreur lors de la requête:', error);
                alert('Erreur lors de la suppression du logement');
            })
            .finally(() => {
                // Réactiver le bouton
                btnSupprimer.disabled = false;
                btnSupprimer.innerHTML = 'Supprimer';
            });
    }
    
    /**
     * Exporte la liste des logements au format CSV
     */
    function exporterCSV() {
        const params = new URLSearchParams();
        
        for (const [key, value] of Object.entries(paramsActuels)) {
            if (value !== '') {
                params.append(key, value);
            }
        }
        
        params.delete('page');
        params.delete('limite');
        params.append('export', 'csv');
        
        window.location.href = '../controllers/admin.php?action=recuperer_logements&' + params.toString();
    }
    
    /**
     * Formate un prix
     */
    function formaterPrix(prix) {
        return new Intl.NumberFormat('fr-FR', {
            style: 'currency',
            currency: 'EUR'
        }).format(prix);
    }
});
</script>

<?php
// Inclure le pied de page
include CHEMIN_VUES . '/admin/footer.php';
?>
